name: buildstore_enterprise

trigger:
  branches:
    include:
      - master
      

variables:
  - name: slnPath
    value: BuildStoreEnterprise.sln
  - name: nameProjectBase
    value: BuildStoreEnterprise.WebApp.MVC
  - name: projPath
    value: src/web/BuildStoreEnterprise.WebApp.MVC/BuildStoreEnterprise.WebApp.MVC.csproj
  - name: folderSavePublish
    value: buildstore_enterprise
  - name: uriServerFtp
    value: $(FTP_URI)
  - name: userServerFtp
    value: $(FTP_USERNAME)
  - name: passServerFtp
    value: $(FTP_PASSWORD)
  - name: env
    ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      value: dev
    ${{ else }}:
      value: $(Build.SourceBranchName)

stages:
  - stage: Build
    displayName: Compilar e Publicar
    jobs:
      - job: BuildAndPublish
        displayName: Build & FTP
        pool:
          name: BuildStorePipeline
          vmImage: windows-latest

        steps:
        - checkout: self
          fetchDepth: 1

        - task: UseDotNet@2
          displayName: 'Use .NET SDK 9.x'
          inputs:
            packageType: 'sdk'
            version: '9.0.x'

        - task: DotNetCoreCLI@2
          displayName: 'Build Solution'
          inputs:
            command: 'build'
            projects: '$(slnPath)'
            arguments: '--configuration Release'

        - task: PowerShell@2
          displayName: 'Publish MVC'
          inputs:
            targetType: inline
            script: |
              dotnet publish $(projPath) --configuration Release \
                --output $(Build.ArtifactStagingDirectory)/$(nameProjectBase)

        - task: PowerShell@2
          displayName: 'Publish Services'
          inputs:
            targetType: inline
            script: |
              Get-ChildItem src/services -Recurse -Filter *.csproj |
                ForEach-Object {
                  $name = Split-Path $_.DirectoryName -Leaf
                  dotnet publish $_.FullName --configuration Release \
                    --output $(Build.ArtifactStagingDirectory)/services/$name
                }

        - task: FtpUpload@2
          displayName: 'Publicar BuildStoreEnterprise.Carrinho.API via FTP'
          inputs:
            credentialsOption: 'inputs'
            serverUrl: $(uriServerFtp)
            username: $(userServerFtp)
            password: $(passServerFtp)
            rootDirectory: '$(Build.ArtifactStagingDirectory)/services/BuildStoreEnterprise.Carrinho.API'
            filePatterns: '**'
            remoteDirectory: '/$(env)/$(folderSavePublish)/services/BuildStoreEnterprise.Carrinho.API'
            preservePaths: true

        - task: FtpUpload@2
          displayName: 'Publicar BuildStoreEnterprise.Catalogo.API via FTP'
          inputs:
            credentialsOption: 'inputs'
            serverUrl: $(uriServerFtp)
            username: $(userServerFtp)
            password: $(passServerFtp)
            rootDirectory: '$(Build.ArtifactStagingDirectory)/services/BuildStoreEnterprise.Catalogo.API'
            filePatterns: '**'
            remoteDirectory: '/$(env)/$(folderSavePublish)/services/BuildStoreEnterprise.Catalogo.API'
            preservePaths: true

        - task: FtpUpload@2
          displayName: 'Publicar BuildStoreEnterprise.Cliente.API via FTP'
          inputs:
            credentialsOption: 'inputs'
            serverUrl: $(uriServerFtp)
            username: $(userServerFtp)
            password: $(passServerFtp)
            rootDirectory: '$(Build.ArtifactStagingDirectory)/services/BuildStoreEnterprise.Cliente.API'
            filePatterns: '**'
            remoteDirectory: '/$(env)/$(folderSavePublish)/services/BuildStoreEnterprise.Cliente.API'
            preservePaths: true

        - task: FtpUpload@2
          displayName: 'Publicar BuildStoreEnterprise.Identidade.API via FTP'
          inputs:
            credentialsOption: 'inputs'
            serverUrl: $(uriServerFtp)
            username: $(userServerFtp)
            password: $(passServerFtp)
            rootDirectory: '$(Build.ArtifactStagingDirectory)/services/BuildStoreEnterprise.Identidade.API'
            filePatterns: '**'
            remoteDirectory: '/$(env)/$(folderSavePublish)/services/BuildStoreEnterprise.Identidade.API'
            preservePaths: true

        - task: FtpUpload@2
          displayName: 'Publicar BuildStoreEnterprise.Pagamento.API via FTP'
          inputs:
            credentialsOption: 'inputs'
            serverUrl: $(uriServerFtp)
            username: $(userServerFtp)
            password: $(passServerFtp)
            rootDirectory: '$(Build.ArtifactStagingDirectory)/services/BuildStoreEnterprise.Pagamento.API'
            filePatterns: '**'
            remoteDirectory: '/$(env)/$(folderSavePublish)/services/BuildStoreEnterprise.Pagamento.API'
            preservePaths: true

        - task: FtpUpload@2
          displayName: 'Publicar BuildStoreEnterprise.Pedido.API via FTP'
          inputs:
            credentialsOption: 'inputs'
            serverUrl: $(uriServerFtp)
            username: $(userServerFtp)
            password: $(passServerFtp)
            rootDirectory: '$(Build.ArtifactStagingDirectory)/services/BuildStoreEnterprise.Pedido.API'
            filePatterns: '**'
            remoteDirectory: '/$(env)/$(folderSavePublish)/services/BuildStoreEnterprise.Pedido.API'
            preservePaths: true